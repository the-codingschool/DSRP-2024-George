```{r}
#load in packages
library(dplyr)
library(janitor)
library(ggplot2)
library(tidyr)
library(Hmisc)
library(stringr)
library(caTools)
```

Load in Data

```{r}
#load in data
data <- readRDS("AayanProject/ecoData.rds")

data
```

Null Work and Other Data Prep

```{r}
#getting a list of indexes that have more than 3 nulls
to_drop = numeric(0)
for (i in 1:length(data$country)){
  if (sum(is.na(data[i,])) >=3){
    to_drop <- c(to_drop, i)
  }
}

data <- data[-to_drop, ]
```

```{r}
#imputing other nulls with the median or mean
data <- mutate(data, across(c("sdgi", "hdi"), ~ replace_na(., mean(., na.rm = TRUE)))) #mean for these because there aren't major outliers

data <- mutate(data, across(c("life_expectancy", "per_capita_gdp", "population_millions"), ~ replace_na(., median(., na.rm = TRUE)))) #life expec is an int so mean doesn't make sense; the other two have some major outliers which skew the mean

#none of the outliers are major enough to drop them, but they don't make sense for the mean

print(sum(is.na(data))) #should be 0 if everything is done correctly
```

```{r}
#dropping things with EXTREME eco_differences (arbitrary definition of extreme)

data <- filter(data, !(abs(eco_difference) > 30))
data
```

```{r}
#making the region factors into ints
data <- mutate(data, region = as.integer(region))
head(data)
```

ANOVA Test

-   Null Hypothesis - There is no difference in the means of eco_difference in each of the bins

```{r}
#binning variables in order to run some anova tests
#I am going to run an anova test on life expectancy and sdgi since those had higher correlation with eco_difference

#they are going to be split by quartiles
sdgiQuartiles <- quantile(data$sdgi, probs = c(0, 0.25, 0.5, 0.75, 1))

#binning
binned_sdgi_data<-mutate(data, sdgi_bin = cut(sdgi,
                            breaks=sdgiQuartiles,
                            include.lower=TRUE,
                            labels=c("L", "ML", "MH", "H")))
#L - low, ML - med low, MH - med high, H - high
binned_sdgi_data
```

```{r}
#SDGI boxplot before anova test
boxplot(eco_difference ~ sdgi_bin, data = binned_sdgi_data, main = "Eco Difference by SDGI", xlab="SDGI", ylab="Eco Difference")
```

```{r}
#SDGI anova test
anova_test <- aov(eco_difference ~ sdgi_bin, data = binned_sdgi_data)
summary(anova_test)
tukey_result <- TukeyHSD(anova_test)
print(tukey_result)
```

```{r}
#split by quartiles
lifeExpecQuartiles <- quantile(data$life_expectancy, probs = c(0, 0.25, 0.5, 0.75, 1))

#binning
binned_lifeExpec_data <- mutate(data, lifeExpec_bin = cut(life_expectancy,
                            breaks=lifeExpecQuartiles,
                            include.lower=TRUE,
                            labels=c("L", "ML", "MH", "H")))
head(binned_lifeExpec_data)
```

```{r}
#a boxplot of eco difference by life expectancy
boxplot(eco_difference ~ lifeExpec_bin, data = binned_lifeExpec_data, main = "Eco Difference by Life Expectancy", xlab="Life Expectancy", ylab="Eco Difference")
```

```{r}
#life expectancy anova test
anova_test <- aov(eco_difference ~ lifeExpec_bin, data = binned_lifeExpec_data)
summary(anova_test)
tukey_result <- TukeyHSD(anova_test)
print(tukey_result)
```

Conclusion From These Anova Tests

-   SDGI did not have significant differences between each group (p-val 0.2)

-   Life Expectancy had very significant differences between each group (p-val 0.00000425)

Modeling (Logistic Regression) - and then looking an coefficients

```{r}
#standardizing the data
temp_data <- data[-1] #drop region from the standardization
data_standardized <- as.data.frame(scale(temp_data[-ncol(data)][, sapply(data, is.numeric)])) #standardize everything but the target

#dropping eco_difference because it will not be used in modeling
data_standardized <- data_standardized[-ncol(data_standardized)]

#adding back region and the target
data_standardized <- mutate(data_standardized, region = data$region, is_sustainable = data$is_sustainable)
data_standardized
```

```{r}
#splitting the data
# split <- sample.split(data_standardized$is_sustainable, SplitRatio = 0.8)
# train_data <- subset(data_standardized, split == TRUE)
# test_data <- subset(data_standardized, split == FALSE)
```

```{r}
#fitting the model (logistic regression)
model <- glm(is_sustainable ~ sdgi + hdi +life_expectancy + per_capita_gdp + population_millions, data = data_standardized, family=binomial)
```

```{r}
summary(model)
```

```{r}
#Model Evaluation

#preds on test data
predictions <- predict(model, type = "response")

# Create a confusion matrix
threshold <- 0.5
predicted_classes <- ifelse(predictions > threshold, 1, 0)
table(predicted_classes, data_standardized$is_sustainable)

# Calculate accuracy
accuracy <- mean(predicted_classes == data_standardized$is_sustainable)
accuracy
```

```{r}
#feature importance/coefficients of the model

# Extract coefficients
coefficients <- coef(model)
print("Coefficients:")
print(coefficients)

# Exponentiate coefficients to get odds ratios
odds_ratios <- exp(coefficients)
print("Odds Ratios:")
print(odds_ratios)
```

Odds Ratios: ex. For each unit increase of life expectancy, the odds of a country being self sustainable decrease by 39% (1 - 0.61).

-   0.61 is the odd ratio of life_expectancy

Plotting the Coefficients and Odd Ratios

```{r}
#a vector of the names that correlate with the coefficients
names <- c("SDGI", "HDI", "Life Expectancy", "Per Capita GDP", "Population Millions")
feature_coefs <- coefficients[-1] #dropping the intercept value
#dataframe for the plot
plot_df <- data.frame(Features = names, coefs=feature_coefs)

#the plot of coefficients
ggplot(plot_df, mapping=aes(Features, coefs)) + geom_point() + ylim(-1,1) + geom_hline(yintercept=0, linetype="dashed") + labs(title="The Coefficients of the Features in the Logistic Regression Model", x="Features", y="Coefficients")
```
